{"ast":null,"code":"var _jsxFileName = \"E:\\\\Intern\\\\Mail Application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../src/App.css\";\nimport MailConfigForm from \"../src/MailConfigForm\";\nimport ComposeMailForm from \"../src/ComposeMailForm\";\nimport SentEmailsList from \"../src/SentEmailsList\";\n// import { fetchSentEmails, sendEmail } from \"../backend/api\"; // Assuming backend API calls\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [smtpConfig, setSmtpConfig] = useState(null);\n  const [sentEmails, setSentEmails] = useState([]);\n  useEffect(() => {\n    const loadSentEmails = async () => {\n      const emails = await fetchSentEmails(); // Fetch from backend database\n      setSentEmails(emails);\n    };\n    loadSentEmails();\n  }, []);\n  const handleConfigSubmit = async config => {\n    setSmtpConfig(config);\n    try {\n      await sendEmail(config); // Send test email using backend API\n      alert(\"Mail configuration successful!\");\n    } catch (error) {\n      console.error(\"Error sending test email:\", error);\n      alert(\"Error configuring mail. Please check details.\");\n    }\n  };\n  const handleSendEmail = async emailData => {\n    if (!smtpConfig) {\n      alert(\"Please configure your mail settings before sending.\");\n      return;\n    }\n    try {\n      await sendEmail(smtpConfig, emailData); // Send email with configured settings\n      alert(\"Email sent successfully!\");\n      setSentEmails([...sentEmails, emailData]); // Update sent emails list locally\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      alert(\"Error sending email. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mail Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !smtpConfig && /*#__PURE__*/_jsxDEV(MailConfigForm, {\n      onSubmit: handleConfigSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this), smtpConfig && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComposeMailForm, {\n        onSubmit: handleSendEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SentEmailsList, {\n        emails: sentEmails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8p6LFvUcy6LRokA42JHTEL1k1PE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MailConfigForm","ComposeMailForm","SentEmailsList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","smtpConfig","setSmtpConfig","sentEmails","setSentEmails","loadSentEmails","emails","fetchSentEmails","handleConfigSubmit","config","sendEmail","alert","error","console","handleSendEmail","emailData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["E:/Intern/Mail Application/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../src/App.css\";\r\nimport MailConfigForm from \"../src/MailConfigForm\";\r\nimport ComposeMailForm from \"../src/ComposeMailForm\";\r\nimport SentEmailsList from \"../src/SentEmailsList\";\r\n// import { fetchSentEmails, sendEmail } from \"../backend/api\"; // Assuming backend API calls\r\n\r\nfunction App() {\r\n  const [smtpConfig, setSmtpConfig] = useState(null);\r\n  const [sentEmails, setSentEmails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadSentEmails = async () => {\r\n      const emails = await fetchSentEmails(); // Fetch from backend database\r\n      setSentEmails(emails);\r\n    };\r\n    loadSentEmails();\r\n  }, []);\r\n\r\n  const handleConfigSubmit = async (config) => {\r\n    setSmtpConfig(config);\r\n    try {\r\n      await sendEmail(config); // Send test email using backend API\r\n      alert(\"Mail configuration successful!\");\r\n    } catch (error) {\r\n      console.error(\"Error sending test email:\", error);\r\n      alert(\"Error configuring mail. Please check details.\");\r\n    }\r\n  };\r\n\r\n  const handleSendEmail = async (emailData) => {\r\n    if (!smtpConfig) {\r\n      alert(\"Please configure your mail settings before sending.\");\r\n      return;\r\n    }\r\n    try {\r\n      await sendEmail(smtpConfig, emailData); // Send email with configured settings\r\n      alert(\"Email sent successfully!\");\r\n      setSentEmails([...sentEmails, emailData]); // Update sent emails list locally\r\n    } catch (error) {\r\n      console.error(\"Error sending email:\", error);\r\n      alert(\"Error sending email. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Mail Sender</h1>\r\n      {!smtpConfig && <MailConfigForm onSubmit={handleConfigSubmit} />}\r\n      {smtpConfig && (\r\n        <>\r\n          <ComposeMailForm onSubmit={handleSendEmail} />\r\n          <SentEmailsList emails={sentEmails} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,cAAc,MAAM,uBAAuB;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,MAAM,GAAG,MAAMC,eAAe,CAAC,CAAC,CAAC,CAAC;MACxCH,aAAa,CAACE,MAAM,CAAC;IACvB,CAAC;IACDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3CP,aAAa,CAACO,MAAM,CAAC;IACrB,IAAI;MACF,MAAMC,SAAS,CAACD,MAAM,CAAC,CAAC,CAAC;MACzBE,KAAK,CAAC,gCAAgC,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDD,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAED,MAAMG,eAAe,GAAG,MAAOC,SAAS,IAAK;IAC3C,IAAI,CAACd,UAAU,EAAE;MACfU,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACF;IACA,IAAI;MACF,MAAMD,SAAS,CAACT,UAAU,EAAEc,SAAS,CAAC,CAAC,CAAC;MACxCJ,KAAK,CAAC,0BAA0B,CAAC;MACjCP,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEY,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CD,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,oBACEf,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB,CAACpB,UAAU,iBAAIL,OAAA,CAACJ,cAAc;MAAC8B,QAAQ,EAAEd;IAAmB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/DpB,UAAU,iBACTL,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA,CAACH,eAAe;QAAC6B,QAAQ,EAAER;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9CzB,OAAA,CAACF,cAAc;QAACY,MAAM,EAAEH;MAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtC,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAlDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}